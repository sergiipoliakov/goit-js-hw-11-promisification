{"version":3,"sources":["js/track_1.js"],"names":["delay","ms","Promise","resolve","reject","setTimeout","logger","time","console","log","then"],"mappings":";AAEA,IAAMA,EAAQ,SAAAC,GAEL,OAAA,IAAIC,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACTF,EAAQF,IACPA,MAIDK,EAAS,SAAAC,GAAQC,OAAAA,QAAQC,IAAsBF,kBAAAA,OAAAA,EAAlC,QAGnBP,EAAM,KAAMU,KAAKJ,GACjBN,EAAM,KAAMU,KAAKJ,GACjBN,EAAM,MAAMU,KAAKJ","file":"track_1.41142b0e.js","sourceRoot":"../src","sourcesContent":["// Напиши функцию delay(ms), которая возвращает промис, переходящий в состояние \"resolved\" через ms миллисекунд. Значением исполнившегося промиса должно быть то кол-во миллисекунд которое передали во время вызова функции delay.\n\nconst delay = ms => {\n  // Твой код\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(ms);\n    }, ms);\n  });\n};\n\nconst logger = time => console.log(`Resolved after ${time}ms`);\n\n// Вызовы функции для проверки\ndelay(2000).then(logger); // Resolved after 2000ms\ndelay(1000).then(logger); // Resolved after 1000ms\ndelay(1500).then(logger); // Resolved after 1500ms\n"]}