{"version":3,"sources":["js/track_3.js"],"names":["randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","Promise","onSuccess","onError","delay","setTimeout","id","logSuccess","time","console","log","logError","warn","amount","then","catch"],"mappings":";;;AAwDA,aAxDA,QAAA,qBAIA,IAAMA,EAA4B,SAACC,EAAKC,GAC/BC,OAAAA,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IAGhDK,EAAkB,SAAAC,GACf,OAAA,IAAIC,QAAQ,SAACC,EAAWC,GACvBC,IAAAA,EAAQX,EAA0B,IAAK,KAE7CY,WAAW,WACUT,KAAKE,SAAW,GAGjCI,EAAUF,EAAYM,GAAIF,GAE1BD,EAAQH,EAAYM,KAErBF,MAIDG,EAAa,SAACD,EAAIE,GACtBC,QAAQC,IAAmBJ,eAAAA,OAAAA,EAAmBE,kBAAAA,OAAAA,EAA9C,QAGIG,EAAW,SAAAL,GACfG,QAAQG,KAC0BN,gCAAAA,OAAAA,EADlC,+BAeFP,EAAgB,CAAEO,GAAI,GAAIO,OAAQ,MAC/BC,KAAKP,GACLQ,MAAMJ,GAETZ,EAAgB,CAAEO,GAAI,GAAIO,OAAQ,MAC/BC,KAAKP,GACLQ,MAAMJ,GAETZ,EAAgB,CAAEO,GAAI,GAAIO,OAAQ,KAC/BC,KAAKP,GACLQ,MAAMJ,GAETZ,EAAgB,CAAEO,GAAI,GAAIO,OAAQ,MAC/BC,KAAKP,GACLQ,MAAMJ","file":"track_3.c6b52556.js","sourceRoot":"../src","sourcesContent":["import '../css/common.css';\n\n// Перепиши функцию makeTransaction() так, чтобы она не использовала callback-функции onSuccess и onError, а принимала всего один параметр transaction и возвращала промис.\n\nconst randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = transaction => {\n  return new Promise((onSuccess, onError) => {\n    const delay = randomIntegerFromInterval(200, 500);\n\n    setTimeout(() => {\n      const canProcess = Math.random() > 0.3;\n\n      if (canProcess) {\n        onSuccess(transaction.id, delay);\n      } else {\n        onError(transaction.id);\n      }\n    }, delay);\n  });\n};\n\nconst logSuccess = (id, time) => {\n  console.log(`Transaction ${id} processed in ${time}ms`);\n};\n\nconst logError = id => {\n  console.warn(\n    `Error processing transaction ${id}. Please try again later.`,\n  );\n};\n\n/*\n * Работает так\n */\n// makeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\n// makeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\n// makeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\n// makeTransaction({ id: 73, amount: 100 }, logSuccess, logError);\n/*\n * Должно работать так\n */\nmakeTransaction({ id: 70, amount: 150 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 })\n  .then(logSuccess)\n  .catch(logError);\n"]}